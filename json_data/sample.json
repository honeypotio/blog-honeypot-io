{
  "app": {
    "config": "config.json",
    "cwd": "./",
    "deterministicOrder": false,
    "display": true,
    "dist": "json_data/output_2.json",
    "filePattern": "*.md",
    "ignore": "",
    "port": 3001,
    "server": false,
    "src": "_posts/",
    "name": "markdown-json",
    "metadata": false,
    "version": "1.6.1"
  },
  "data": [
    {
      "id": "2015-10-07-honey-im-home",
      "contents": "<p>Hello! Welcome to our first Honeypot blog post. We launched the platform last Thursday to some very nice press from the likes of <a target='_blank' href='http://techcrunch.com/2015/10/01/honeypot-wants-to-be-berlins-hired' title='Honeypot Wants To Be Berlin’s Hired'>TechCrunch</a>, <a target='_blank' href='http://venturebeat.com/2015/10/01/berlins-honeypot' title='Honeypot tries novel way to recruit skilled developers'>VentureBeat</a> and <a target='_blank' href='http://www.gruenderszene.de/allgemein/honeypot-kaya-taner-applift' title='Das neue Startup des AppLift-Gründers will das IT-Recruiting umkrempeln'>Gruenderszene</a>. We have also had great feedback from the 400+ new users who signed up in the first week.</p><p>So now that we have launched, it&#39;s time to ask what is Honeypot all about?</p><h3 id='we-believe-it-recruitment-isnt-working-for-anyone'>We believe IT recruitment isn’t working for anyone</h3><p>We started Honeypot because IT recruitment in its current state is broken. Companies spend countless, frustrated hours reaching out to developers. Developers, on the other hand, are overloaded with mismatched offers – wrong technology, incorrect location, boring product...the list is endless.</p><h3 id='so-first-we-bring-the-right-people-together'>So, first we bring the right people together...</h3><p>In building Honeypot we created a place to connect developers and companies. All developers on the platform are accepted after a code review or code challenge. Companies are also screened for quantitative and qualitative criteria, such as funding, company culture, and location, before they are allowed to use Honeypot. So, developers and companies together,  good start.</p><h3 id='and-then-we-ask-them-to-tell-each-other-what-they-want'>....and then we ask them to tell each other what they want</h3><p>Next step was to increase transparency. On Honeypot developers build a profile to specify their ideal position. Companies filter for talent through location and tech requirements and then send job offers with all this information upfront. Before accepting an interview, developers can explore the product, the tech stack and the team through company profiles.</p><h3 id='whats-next-for-honeypot'>What’s next for Honeypot?</h3><ul><li><em>Batches start:</em> Honeypot works on a batch-basis, meaning new developers profiles are released in groups.  We have already released our first batch. The next one will be on the 26th of October.</li><li><em>Expanding talent base:</em> Currently we have developers from Germany, Austria, Poland, Russia, Ukraine, Romania, France, Spain, Italy, Portugal, the UK, Ireland, Brazil, and India, among other countries. The list is growing and we are excited!</li><li><em>Developing new features:</em> We are continuously rolling out new features for the platform and improving ones we already have in place.</li></ul><p>Exciting times ahead! Remember if you aren’t already onboard with Honeypot you can request an invite as a <a target='_blank' href='https://app.honeypot.io/users/sign_up?utm_source=blog&amp;utm_medium=organic&amp;utm_term=e&amp;utm_content=151001&amp;utm_campaign=dev-no'>developer</a> or a <a target='_blank' href='https://www.honeypot.io/pages/for_employers?utm_source=blog&amp;utm_medium=organic&amp;utm_term=g&amp;utm_content=151001&amp;utm_campaign=com-no'>company</a>.  And if you are already a user, we would love to hear your feedback so send us an email to <a target='_blank' href='mailto:hello@honeypot.io' title='Hello Honeypot'>hello@honeypot.io</a>.</p><p>Aside from that, enjoy the platform. And don’t forget to follow us on Twitter <a target='_blank' href='https://twitter.com/honeypotio' title='Twitter'>@honeypotio</a>!</p>",
      "title": "Honey I’m Home! Welcome to Honeypot",
      "subtitle": "What is Honeypot all about? How do we plan on revolutionizing IT recruitment? Check out our first blog piece to get a better understanding of the Honeypot platform and our mission of getting every developer a great job!",
      "date": "2015-10-07T16:27:15.000Z",
      "layout": "post",
      "author": "kaya_taner",
      "categories": ["Product"],
      "cover_image": "honey.png",
      "permalink": "2015-10-07-honey-im-home/",
      "importance": 2,
      "cta": "recruiter",
      "excerpt": "<p>Hello! Welcome to our first Honeypot blog post. We launched the platform last Thursday to some very nice press from the likes of <a target='_blank' href='http://techcrunch.com/2015/10/01/honeypot-wants-to-be-berlins-hired' title='Honeypot Wants To Be Berlin&#x2019;s Hired'>TechCrunch</a>, <a target='_blank' href='http://venturebeat.com/2015/10/01/berlins-honeypot' title='Honeypot tries novel way to recruit skilled developers'>VentureBeat</a> and <a target='_blank' href='http://www.gruenderszene.de/allgemein/honeypot-kaya-taner-applift' title='Das neue Startup des AppLift-Gr&#xFC;nders will das IT-Recruiting umkrempeln'>Gruenderszene</a>. We have also had great feedback from the 400+ new users who signed up in the first week.</p>"
    },
    {
      "id": "2015-10-12-five-biggest-challenges-of-hiring-developers",
      "contents": "<p>Hiring developers is hard. Really hard.  And it&#39;s hard for many reasons. It&#39;s not just  the scarcity of good developers that&#39;s challenging, it&#39;s also the difficulty of understanding their skills, judging their code, measuring cultural fit, and on and on it goes.</p><p>Honeypot was founded with all this in mind. We have been through all that pain and want to make the process of hiring the perfect developer a little easier for all sides. So here’s the five ways we are making hiring developers more efficient:</p><ol><li><p><strong>How can you understand when a developer’s code is good or bad?</strong></p><p><strong>Solution: The developer’s code is checked before they join Honeypot</strong></p><p>Judging a developer’s code for non-technical people is always a challenge. But before a developer gets accepted to Honeypot, they submit a code sample or take a code challenge. We check the way code is organised and tested, the readme, the size of methods, use of concepts like singletons, global variable classes and lots of other small stuff. Knowing that all the developers on Honeypot can code makes the whole process just that little bit easier.</p></li><li><p><strong>How do you know if a developer is actively looking for a new position or not?</strong></p><p><strong>Solution: Filter for candidates by technologies, location, years of experience – and earliest start date!</strong></p><p>Developers are released onto the platform in groups, known as batches. We use batches to avoid the problem of a dead database. This means lots of fresh faces; to be part of the batch the developer has to be actively looking for a new role.  Easy-peasy!</p></li><li><p><strong>How do you judge what motivates a developer?</strong></p><p><strong>Solution: Know the candidate&#39;s ideal position through their personal profile</strong></p><p>This is a valuable feature. We don’t just let developers describe what they have done but also what they would ideally do. Knowing a candidate&#39;s preferences for technologies lets you plan for the future and think about where to fit them in as your grow and develop.</p><p>Oh, and isn’t it just better for everyone involved with salary demands are laid out from the start!</p></li><li><p><strong>How can I speed up the recruitment process of developers?</strong></p><p><strong>Solution: Contact any candidate directly through an Interview Invite</strong></p><p>The developers whose profiles are live on the site are those who are actively looking for jobs. This cuts out the annoying hit and miss of direct sourcing. The interview invite is your opportunity to contact developers directly. Act quick to get there before other companies.</p></li><li><p><strong>How can I convince a developer that we are a cool company?</strong></p><p><strong>Solution: Present your company in Company Profiles feature</strong></p><p>We will automatically create a company profile for you from the assets you provide.  The more complete the profile the higher the chance of hiring the developer.</p></li></ol><hr><p><strong><a target='_blank' href='https://www.honeypot.io/pages/for_employers?utm_source=blog&amp;utm_medium=organic&amp;utm_term=g&amp;utm_content=151002&amp;utm_campaign=hr-no'>Join Honeypot</a> today and connect with top, pre-screened developers. Make 1 hire per 10 invites sent.</strong></p>",
      "title": "The 5 biggest challenges when hiring developers",
      "subtitle": "How can you determine if a developer's code is good or bad? How do you know if a developer is actively looking for a new position? Learn more about the different challenges facing tech recruiters and the solutions you can implement to overcome them.",
      "date": "2015-10-12T16:13:23.000Z",
      "layout": "post",
      "author": "joana_monteiro",
      "categories": ["HR Tips"],
      "cover_image": "challenge.png",
      "permalink": "2015-10-12-five-biggest-challenges-of-hiring-developers/",
      "importance": 2,
      "cta": "recruiter",
      "excerpt": "<p>Hiring developers is hard. Really hard.  And it&apos;s hard for many reasons. It&apos;s not just  the scarcity of good developers that&apos;s challenging, it&apos;s also the difficulty of understanding their skills, judging their code, measuring cultural fit, and on and on it goes.</p>"
    },
    {
      "id": "2016-08-24-7-ways-to-improve-your-hiring-practices-when-recruiting-developers",
      "contents": "<p>At Honeypot, we want to make tech recruitment better for both companies and developers. We receive constructive feedback from developers about various recruiting process on a daily basis. We have picked our seven most frequently occurring points, which can help you improve your tech recruitment, today!</p><h2 id='1-structure-your-interview-process'>1. Structure your interview process</h2><p>Streamlining your interview process is the first, crucial step towards improving your overall hiring rate. First, you will need to consider whether the interview focuses on culture fit or hands-on skills matching for the new job role. Having a “question bank” of go-to questions is a good way of ensuring consistency. These questions should be worked into the conversation in a natural way, always bearing in mind the knowledge you have about the candidate. Scorecards as a tool for assessing and categorising candidates are also a great way of reminding yourself why this candidate appealed to you in the first place. As an added benefit, having a more structure approach to recruitment will help candidates understand procedures and what to expect, which is super helpful for those who need a little help calming their interview nerves.</p><h2 id='2-use-work-sample-tests--instead-of-a-coding-challenge'>2. Use work sample tests  instead of a coding challenge</h2><p>If you are struggling with developers who are not so keen to take your coding challenges, consider creating a work sample test. Take your application, remove a part of code responsible for a specific feature (eg. search filter) and let candidates work on it. This way they can learn about your product and picture what kind of work they would do for you. Furthermore, avoid sending tests before speaking to the developers - they also want to get to know you, before they invest time in your task!</p><h2 id='3-share-feedback-in-a-timely-manner'>3. Share feedback in a timely manner</h2><p>Developers should receive clear, structured feedback on their performance during both the interview and coding challenge. Thanks to your feedback candidates can improve in the future and will consider your company a solid partner. Most importantly, your feedback should arrive on time! If you promised one week - do it in one week. If you are unable to keep this promise - let them know what is going on. </p><h2 id='4-focus-on-potential-not-experience'>4. Focus on potential, not experience</h2><p>Keep in mind that everyone has weaknesses. Your interview process should focus on the developer’s strengths and ability to learn new things, rather than weaknesses and mistakes made. To learn more about your candidate’s workflow process and to see how they are getting on, don’t be afraid to ask them questions about which elements they have been working on so far.  It will be easy to spot smart people. </p><h2 id='5-speed'>5. Speed</h2><p>Speed is crucial if you are searching for senior developers. They will definitely be talking to  other companies and in the end, it’s up to you to convince them to choose yours. Keep in mind that the longer you hesitate the lower the chances are for a successful hire. Make all your team members aware of how important recruiting is and find a way for them to devote a few hours per week to it. This way it will become much easier to align schedules and fix the interviews. </p><h2 id='6-involve-non-tech-team-members'>6. Involve non-tech team members</h2><p>Having troubles evaluating the culture fit? Involve non-tech team members in the interview process. Your online marketing team works closely with the tech team? Have on OM Manager join the interview and talk about the challenges. What also works really well is a trial day, although  these are pretty hard to organize if you hire someone from overseas. </p><h2 id='7-be-considerate'>7. Be considerate</h2><p>If you do hire someone from overseas - be considerate. These candidates are moving their lives (and often families) to join you in your adventure. Address their needs and concerns and support them in the best way possible. </p><p>I hope these points raised by developers on Honeypot will help you improve your recruiting process. Get in touch if you have any questions or feel we missed something! </p><hr><p><strong>Honeypot is a developer-focused job platform. Our Account Managers work closely with HR to create the best hiring experience for developers. Sign-up now to <a target='_blank' href='https://www.honeypot.io/pages/for_employers?utm_source=hiringhewe'>start hiring</a>!</strong></p>",
      "title": "7 steps to hiring top developers!",
      "subtitle": "Are you a recruiter looking to improve your developer hiring process? Trying to hire a developer but unsure what factors to consider? Check out these 7 ways you can improve your hiring process when hiring developers.",
      "date": "2016-08-24T07:04:20.000Z",
      "layout": "post",
      "author": "ewe_grajko",
      "categories": ["HR Tips"],
      "cover_image": "hiring-hacks.png",
      "permalink": "7-ways-to-improve-your-hiring-practices-when-recruiting-developers/",
      "importance": 2,
      "cta": "recruiter",
      "excerpt": "<p>At Honeypot, we want to make tech recruitment better for both companies and developers. We receive constructive feedback from developers about various recruiting process on a daily basis. We have picked our seven most frequently occurring points, which can help you improve your tech recruitment, today!</p>"
    },
    {
      "id": "2016-08-26-employee-experience-infographic",
      "contents": "<p>Upon handing Brian Chesky  a cheque for $150 million, serial investor Peter Thiel passed one piece of advice to the AirBnB co-founder: <a target='_blank' href='https://medium.com/@bchesky/dont-fuck-up-the-culture-597cde9ee9d4#.1w643s796'>“Don’t fuck up the culture.”</a> </p><p>Chesky took  that advice and ran with it. This year, AirBnB scraped its Human Resource department and replaced it with Employee Experience, with the sole aim of making people happy at work. </p><p>While certainly pioneering change in the workplace, AirBnB’s Employee Experience department should not be seen as an isolated achievement, but rather as an important iteration in a larger trend, signalling a shift in the way people think about, well, people. </p><p><img src='/assets/images/what-is-employee-experience-infographic.png' alt='employee-experience-infographic'></p><h3 id='why-the-change-from-human-resources-to-employee-experience'>Why the change from Human Resources to Employee Experience?</h3><p>The shift to a more humanistic outlook on employer-employee relations has been driven by underlying changes in the nature of the labour market, combined with new ways of management thinking, the growing influence of software developers in the workplace and a negative perception of the HR function generally. </p><p>Companies realize they are competing for a globalized talent pool, made up of  employees who change jobs far more frequently than their parents generation. The majority of workers will not spend their entire career with one company.  </p><p>Today’s workers value rapid growth, a flexible workplace, and a sense of mission and purpose at work. This new generation look past salaries, to see which companies offer the greatest chance for personal development and a happy work environment. </p><h3 id='aside-from-titles-what-has-changed'>Aside from titles, what has changed?</h3><p>While titles shift to Human Resource Manager to SVP of People, Chief People Officer and  Global Head of Employee Experience, the real changes are much deeper.  </p><p>The biggest change from the traditional HR set-up to Employee Experience is the scope of responsibility of the HR team. In traditional setups,  HR functions include <strong>recruitment, compliance training, career development, risk management, and performance management.</strong> A large emphasis is also put on compliance and administration, particularly keeping to budgets.  </p><p>In this setup, success is measured through recruiting a particular number of people within a defined budget. It is argued that these metrics are often manipulated, with people motivated to fill roles rather than to find the best candidate for the right position. Further, the focus on cost efficiency is being judged as coming at the cost of flexibility and innovation. </p><p>In contrast, Employee Experience focuses on three main areas: <strong>culture, technology and organizational design.</strong> Payroll and admin are being separated from the main function, so as not to complicate the relationship between Employee Experience teams and the employees. </p><p>Topics covered can range from compensation and engagement to people analytics, workplace design, and well-being.  Many of the changes have been inspired by design thinking and behavioural psychology, all with the ultimate aim of creating a workplace people actually want to show up to. </p><p>The changes are being supported by more tech-orientated HR teams, who rely on multiple tools, like modern ATS systems (e.g <a target='_blank' href='https://www.lever.co/'>Lever</a>), recruiting platforms (e.g <a target='_blank' href='https://www.honeypot.io/pages/for_employers?utm_source=EX'>Honeypot</a>) and employee happiness tools (e.g <a target='_blank' href='https://peakon.com/'>Peakon</a>)), rather than clunky legacy systems. Data, in the form of people analytics, are being leveraged to guide decisions in talent planning and management. </p><h3 id='who-is-leading-the-shift-from-human-resources-to-employee-experience'>Who is leading the shift from Human Resources to Employee Experience?</h3><p>In the last five years, companies are placing an elevated priority on the reimagination of HR.  Many of the individuals responsible for this reimagination have become leaders in the field. </p><p>Three top profiles are:  Laszlo Bock, Google’s Former SVP of People Operations, Mark Levy, Head of Employee Experience at Air B’B and Patty McChord, former Chief Talent Officer at Netflix. </p><p>McChord’s 2009 <a target='_blank' href='http://www.slideshare.net/reed2001/culture-1798664'>presentation</a> on Netflix’s culture laid the foundation for thinking on culture in the workplace, which Bock and Levy later developed. In Europe, VP People at SoundCloud, Caoimhe Keogan, is recognized as being an innovative influencer. </p><h3 id='the-future-of-employee-experience'>The Future of Employee Experience</h3><p>Thiel’s advice, which launched Airbnb’s obsession with employee culture, came to life in Levy’s vision of the workplace and remains the most <a target='_blank' href='http://www.forbes.com/sites/jeannemeister/2015/07/21/airbnbs-chief-human-resource-officer-becomes-chief-employee-experience-officer/3/#620e80862b68'>complete example of Employee Experience</a>. With the change, more diverse profiles are entering HR, seeking to revolutionize how people and organizations interact. And that&#39;s good news for employees everywhere. </p><hr>",
      "title": "What is Employee Experience?",
      "subtitle": "What is Employee Experience and how does it differ from traditional Human Resources? Why are more and more companies moving towards Employee Experience? Who is leading the shift from Human Resources to Employee Experience? Find all the answers in this handy infographic.",
      "date": "2016-08-25T14:34:44.000Z",
      "layout": "post",
      "author": "emma_tracey",
      "categories": ["HR Tips"],
      "cover_image": "employer-experience.png",
      "permalink": "employee-experience-infographic",
      "importance": 2,
      "cta": "recruiter",
      "excerpt": "<p>Upon handing Brian Chesky  a cheque for $150 million, serial investor Peter Thiel passed one piece of advice to the AirBnB co-founder: <a target='_blank' href='https://medium.com/@bchesky/dont-fuck-up-the-culture-597cde9ee9d4#.1w643s796'>&#x201C;Don&#x2019;t fuck up the culture.&#x201D;</a> </p>"
    },
    {
      "id": "2016-08-29-fullstack-developer",
      "contents": "<p>&quot;Fullstack developer&quot; is a controversial tagline in any job posting. The term, which dates back to the 90s, with the rise of AJAX and multi-device rendering concerns, remains contested by many. And while the role does have its place, the term itself needs a serious update. Its time to say hello to the generalist developer. </p><!-- Main image --><h3 id='who-is-a-fullstack-developer'>Who is a fullstack developer?</h3><p>The definition of a fullstack developer in itself is subjective. To generalise, a fullstack developer is someone who works both on the presentational side of software and the computational side. In web development a fullstack developer usually works on frontend and backend concerns of a website. Back in the 90&#39;s to mid-2000&#39;s web developers were synonymous with fullstack developers. As most web projects consisted of simple user interfaces generated solely by servers, it was not uncommon to have all concerns handled by servers. It meant most developers had to know how to work with backend tasks as well as frontend-related issues. So, what has happened since then?</p><h3 id='enter-javascript-frameworks-and-handheld-devices'>Enter JavaScript frameworks and handheld devices</h3><p><img src='/assets/images/device-browser-usage.png' alt='Global OS Usage chart 2008-2016'></p><p>From the mid-2000&#39;s, a myriad of phone and tablet devices were introduced. This coincided with the rise of JavaScript frameworks, dealing solely with frontend presentation, which was a result of a new and exciting technique called AJAX (asynchronous JavaScript &amp; XML). Instead of web servers taking requests and returning a full rendered web page, a page could query for specific information and update the relevant presentational part. This meant faster websites (you only request what you need when you need it) and a new approach to web technologies. A new stack was introduced.</p><p>Phones and tablets brought with them an interesting concern to web development. Previously, websites were limited to personal computers, paying no attention to different screen sizes. The advent of phones and tablets called for a re-think on how web information was presented and consumed. This also added a new concern to the frontend side of things.</p><h3 id='the-myth'>The myth</h3><p><a target='_blank' href='http://andyshora.com/full-stack-developers.html'>There</a> <a target='_blank' href='https://techcrunch.com/2014/11/08/the-rise-and-fall-of-the-full-stack-developer/'>are</a> <a target='_blank' href='https://twitter.com/extraface/status/476834118584377345'>plenty</a> of non-believers when it comes to the presence of fullstack developers in the modern development era. These concerns are understandable. Compared to pre-AJAX web, there are variety of concerns for one to master. Fullstack now involves:</p><ul><li>Frontend<ul><li>Design splicing and implementation</li><li>Responsive web implementation</li><li>JavaScript<ul><li>API integration</li><li>Framework (or vanilla.js) implementation</li><li>Performance optimization</li><li>Unit testing</li></ul></li><li>Miscellaneous<ul><li>Task runners</li><li>Accessibility</li><li>Different CSS/JS framework knowledge</li><li>Behavior testing</li></ul></li></ul></li><li>Backend<ul><li>General backend model implementation<ul><li>Authentication/Authorization</li><li>API design</li></ul></li><li>Database<ul><li>Database design</li><li>Query optimisation</li><li>Data indexing</li></ul></li><li>Miscellaneous<ul><li>Data analytics (Big Data tools)[^1]</li><li>Unit tests</li><li>Isomorphic Rendering</li></ul></li></ul></li><li>DevOps<ul><li>Continuous Integration</li><li>Load Balancing</li><li>Caching</li><li>Virtualisation</li><li>Server security</li><li>Smoke tests</li></ul></li></ul><p>All the above, plus a multitude of other business specific requirements[^2] are the concerns of 2016 regarding fullstack developers. A frontend or backend developer will be able to master their relevant concerns, but it is almost impossible to find a fullstack developer capable of mastering both. However, that is not to say a developer is incapable of knowing and understanding all the concerns listed above.</p><h3 id='the-reality'>The reality</h3><p>Fullstack development is mostly limited to small teams with smaller-focused products. This means that a developer who is familiar with one stack would rarely possess the same knowledge on a variety of stacks. In comparison a backend developer would typically posse the same level of mastery on two or more server languages. As a matter of fact, most small companies require fullstack developers, meaning developers who are equally comfortable on the frontend and backend.</p><p>On the other side, most frontend or backend developers are to some extent fullstack developers, when we use this definition. After all, a lot of frameworks extract away the nitty-gritty parts of development, allowing us to focus on product delivery. Ironically, it is equally hard to find a developer who is unfamiliar with the stack that is not their specialisation.</p><h3 id='the-perks-and-costs-of-being-a-fullstack-developer'>The perks and costs of being a fullstack developer</h3><p>Aspiring fullstack developers should understand that the title is almost an oxymoron in today&#39;s development. It is much more sensible to aim towards being a well-rounded developer, and with time, and by extension experience, developers end up acquiring knowledge on how the other side works. However, developers with enough knowledge to dive on both stacks are in more demand as far as web development is concerned. They might not have similar knowledge in the frontend compared to a frontend developer, but they are comfortable enough to deliver a final product, and in most cases, that is good enough.</p><h4 id='perks-of-a-fullstack-developer'>Perks of a fullstack developer</h4><p>As stated previously, fullstack developers enjoy a lot more opportunities compared to a developer specializing in one stack. Most companies would prefer someone as comfortable dealing with CSS edge-cases as they are dealing with odd database queries.</p><p>Software tend to become a lot more challenging and equally rewarding when dealing with both ends of the stack. It is much harder to be bored when you have twice as many features and bugs to work on. Keeping in mind most fullstack developers work in small teams, product ownership seems to come almost naturally. </p><p>Some fullstack developers will go as far as having two different resumes, one for each stack, when applying for positions. In a way this maximises their chances of a getting the gig, but it might be tricky for some considering most fullstack developers tend to have a preferable stack when applying for positions.</p><h4 id='costs-of-a-fullstack-developer'>Costs of a fullstack developer</h4><p>Fullstack development means dealing with context switching on a daily basis. The mentality of frontend development is not the same as that of a backend development. This often leads to <a target='_blank' href='https://www.reddit.com/r/ProgrammerHumor/comments/4oki3a/a_full_stack_developer_is_a_developer_who_can/'>introduction of bugs</a>. It is almost unavoidable when the job involves working with technologies with different priorities. With Node.js, it might reduce some programming language syntax errors, as far as context switching is concerned, but the different environment requirements are still there.</p><p>A lot of software development involves keeping up to date with the <a target='_blank' href='http://dayssincelastjavascriptframework.com/'>latest frameworks</a> and techniques. To a fullstack developer, this means double the amount work for their immediate stack. That does not include picking up new stacks altogether.</p><p>Compared to frontend development, backend developers have a significantly wider choice in technologies. A fullstack developer tends to be experienced in only a couple of technologies, and the task of mastering several programming languages becomes harder with frontend development in mind. While they might be able to apply to several positions, it becomes harder to standout when job opportunities demand highly specific domain knowledge[^3].</p><p>There are large tech companies who will outright not hire a fullstack developer. They require specific domain knowledge and would prefer someone with enough experience dealing with edge cases. Statistically, these jobs are less common but tend to be more on the bleeding edge of software development.</p><h3 id='final-thoughts'>Final thoughts</h3><p>The old definition of a fullstack developer is almost extinct, and it is much better to refer to them as generalist developers. The best way to become one is by focusing on one stack early in your career, while slowly picking up knowledge on the other stack. It is almost futile to aspire mastering both stacks, as the amount of information grows exponentially with each additional stack.</p><p>&nbsp;</p><p>&nbsp;</p><p>[^1]: Data science and/or big data is a can of worms on its own</p><p>[^2]: A back-end developer for a video-content site will have different requirements to one working on a photo-sharing product. The same applies to front-end and dev-ops.</p><p>[^3]: <em>Jack of all trades, master of none</em>, <del>but better than master of one</del>.</p><hr>",
      "title": "What is a full-stack developer?",
      "subtitle": "What is full-stack development and what does a full-stack developer do? What are the perks and disadvantages of being a full-stack developer? Our in-house developer Kado tells you all about full-stack development and the manner in which it has evolved since the 90s.",
      "date": "2016-08-29T12:00:28.000Z",
      "layout": "post",
      "author": "kado_damball",
      "categories": ["Developer Careers"],
      "cover_image": "fullstack_dev.png",
      "permalink": "fullstack-developer/",
      "importance": 2,
      "excerpt": "<p>&quot;Fullstack developer&quot; is a controversial tagline in any job posting. The term, which dates back to the 90s, with the rise of AJAX and multi-device rendering concerns, remains contested by many. And while the role does have its place, the term itself needs a serious update. Its time to say hello to the generalist developer. </p>"
    },
    {
      "id": "2016-09-01-12-interview-questions-for-devops",
      "contents": "<p>DevOps is a pretty new term, which makes hiring DevOps engineers a little challenging. The term “DevOps” first appeared in 2008, as part of a movement to bring greater collaboration between developers and IT professionals while improving software delivery. </p><p><em>“How do I interview DevOps engineers”</em> is one of the most common questions heard from recruiters and CTOs alike. And if you’re a dev reading this, now you know what to expect - you’re welcome. The 12 questions below serve as a starting point for a general, non-technical interview of DevOps candidates. Feel free to build and test your own (yes, that’s a DevOps joke!)</p><h2 id='12-common-devops-interview-questions'>12 Common DevOps interview questions</h2><h3 id='1--what-are-the-top-devops-tools-and-which-ones-have-you-worked-on'>1.  What are the top DevOps tools? And which ones have you worked on?</h3><p>Let’s start super basic. Here are some of the top DevOps tools and their function: </p><p><strong>Git</strong> - used as a source code management tool, and for tracking the progress of remote teams and open source collaborators.<strong>Gradle</strong> - using gradle scripts tasks can be automated throughout the building, testing and deployments stages. <strong>Kubernetes</strong> - “is an open-source system for automating deployment, scaling, and management of containerised applications. It’s a useful tool for continuous integration, continuous delivery, and continuous deployment.”<strong>Selenium</strong> - is an automated testing framework. It can be made to test web applications automatically. <strong>Jenkins</strong> - DevOps teams use Jenkins to speed up production by automating a sequence of actions in the building, testing and deployment phases. <strong>Puppet</strong> - this configuration management tool helps to automate inspecting, delivering and managing software. <strong>Ansible</strong> - Ansible is the simplest way to automate apps and IT infrastructure. Application Deployment + Configuration Management + Continuous Delivery<strong>Chef</strong> - another configuration management tool.<strong>Docker</strong> - works to ensure a stable environment across all stages of development, from staging to production. </p><h3 id='2--how-do-you-define-devops'>2.  How do you define devops?</h3><p>DevOps is a fairly new discipline, and being so young there is often a muddle of opinions around what a DevOps engineer actually does. The candidate may have a different perspective on the role than yourself. Make it clear to yourself prior to the interview what roles and duties you want the candidate to be able to perform. In the interview, ask them to define what the role means to them. When they elaborate on the various roles and responsibilities, you’ll get a pretty clear picture of the candidates capabilities, and if they match what you’re looking for. </p><h3 id='3--are-there-any-limitations-to-the-application-of-devops-in-companies-of-different-sizes'>3.  Are there any limitations to the application of DevOps in companies of different sizes?</h3><p>From the beginning, DevOps has been something startups and smaller companies have adopted to scale. The leading argument for this has been that a lean and agile methodology would not be applicable on a larger scale. Thus, the quick answer to this might be “no.” However, a candidate with a broader understanding of DevOps may note that large corporates, from Toyota to Motorola to L’Oreál, have begun to fully embrace an agile work approach and taken up DevOps.</p><h3 id='4-whats-your-experience-with-the-tools-chef-puppet-ansible-and-salt'>4. What’s your experience with the tools Chef, Puppet, Ansible and Salt?</h3><p>The palette of tools and skills available to DevOps is extensive, and naturally personal preferences and work experience have a great impact on the specific skillsets of individual DevOps engineers. However, there are certain tools, with which all DevOps engineers ought to be familiar: Chef, Puppet, Ansible and Salt.These are all tools enabling the scalability of server configuration and management through automation, which allows the orchestration of hundreds - even thousands of servers. Of course, not being an expert in all tools doesn’t mean you don’t have a great DevOps engineer on your hands - but if they have no experience with at least one of them, your spider senses should be tingling.</p><h3 id='5-what-is-your-experience-with-continuous-integration'>5. What is your experience with continuous integration?</h3><p>Continuous integration is a key element of DevOps, as it refers to the process of continually merging the source code of all developers in a team, which enables the detecting and fixing of any mismatches and errors at an early stage. This encourages alignment before continuing with writing new code, which ultimately leads to a speedier, more responsive process.While the previous question addressed specific tools, this question relates to workflow processes, and there are many tools which may be used for continuous integration, including Travis, Jenkins, Bamboo, Circle and TeamCity.</p><h3 id='6-use-an-example-to-explain-what-a-vulnerability-is-and-how-and-how-it-may-it-be-prevented'>6. Use an example to explain what a vulnerability is and how and how it may it be prevented</h3><p>A vulnerability is a system flaw or weakness, which has the potential of being exploited by a hacker. It isn’t necessarily a security risk, as that would indicate a “loss”, rather it refers to any kind of asset (value or no value) that could be affected by an outside attacker.The perhaps best known example is the “Heartbleed” incident from 2014, where a security bug was inclosed in the OpenSSL cryptography library, which in summary meant up to half a million secure web servers - both servers and clients - were at risk of “buffer over-read” aka the potential theft of private keys, passwords and user session cookies.There are tools which can aid the detection of vulnerabilities but, however to truly prevent system flaws, careful system maintenance, best practices in deployment and auditing must be executed diligently. A good DevOps engineer should know this!</p><h3 id='7-which-development-and-infrastructures-mention-the-core-operations-of-devops-and-do-you-have-experience-with-these-tools'>7. Which development and infrastructures mention the core operations of DevOps? And do you have experience with these tools?</h3><p>Core operations of DevOps include: </p><ul><li>development </li><li>version control</li><li>testing</li><li>integration</li><li>deployment</li><li>delivery </li><li>configuration</li><li>monitoring</li><li>feedback</li></ul><h3 id='8-whats-the-difference-between-continuous-testing-and-automation-testing'>8. What’s the difference between Continuous Testing and Automation Testing?</h3><p>Automation testing is simply automating tests which were previously done manually. This can be done using various testing tools combined with scripts, so that tests are run automatically and without the need for manual intervention. Continuous testing is the action of continually carrying out automated tests throughout the development process. As each build is continuously tested, feedback from the business is exchanged so that problems and issues are identified quickly and before teams move into the next stage of production. Since feedback is provided along the way, developers can identify exactly where the issue(s) occur in production and fix them without having to rebuild the entire project. </p><h3 id='9-what-role-does-aws-serve-in-devops'>9. What role does AWS serve in DevOps?</h3><p>The answer to this question should be straightforward. Amazon Web Services is a secure cloud services platform offering database storage, unlimited computing power and other functionalities to help a business scale and grow. Using the cloud functionality, companies can create and release polished products and applications to the web. There are over 175 fully featured services inside of the AWS package, covering a wide range of technologies. You may want to ask the candidate if they have ever worked with other cloud platforms to see what infrastructure they might have handled in the past. Ask them about data projects they have been a part of, and what cloud services they leveraged to manage the project. </p><h3 id='-whats-the-difference-between-agile-and-devops'>. What’s the difference between Agile and DevOps?</h3><p>Most DevOps engineers expect this question as it’s fairly standard, but that doesn’t mean it isn’t helpful in understanding more about the candidate. There are many similarities which the candidate should identify, including Agile and DevOps methodologies. Ultimately you should hear that Agile helps with smoother production and development of software, while DevOps handles development and deployment of the piece of software - working towards maximum efficiency with faster productions, minimal errors and maximum reliability. </p><h3 id='11-whats-the-importance-of-devops-how-does-it-benefit-the-delivery-of-software'>11. What’s the importance of DevOps? How does it benefit the delivery of software?</h3><p>With everything going digital, the competition is becoming fierce. In order to keep up and stay relevant organizations must reinvent product deployment systems to allow for more flexibility with a robust design. This way they can adapt with the digital landscape.DevOps helps with this. A DevOps engineer can help streamline entire processes and promote mobility and agility to the production pipeline, starting with the core idea and ending with delivery to users. By implementing these streamlined processes, organisations can continually update and improve their products, staying competitive and flexible as the marketplace grows and adapts. </p><h3 id='12--overall-whats-the-most-important-thing-devops-helps-achieve'>12.  Overall, what’s the most important thing DevOps helps achieve?</h3><p>This question gets to the heart of the matter, and the candidate should be able to deliver a clear point. It should run along the lines of: the key thing DevOps will do for your organization will be to deliver faster updates into production with minimal risks helping your organization to achieve faster changes set in production without a lack of quality or an increase in risk. </p><p>That is the primary concept you want to hear from the candidate, however they may add other positives. For example; better communication and increased collaboration amongst teams. You will get a sense of the candidates experience in how precise and to the point the answer is. If they begin listing every benefit left-right-and-centre, it might show a lack of understanding on their part.</p><h2 id='8-top-tips-to-prepare-for-your-devops-interview'>8 Top tips to prepare for your devops interview</h2><p>This section is just for you, devs!</p><h3 id='1-note-your-successes'>1. Note your successes</h3><p>Identify what successes you have had working in DevOps, then make them relevant to the skills the company is looking for. Make sure to explain exactly why these ‘successes’ are by talking about the results and how they directly benefited the company. Was productivity increased? Was money saved? Did you create a better customer experience?   </p><h3 id='2-list-the-technologies-youve-used'>2. List the technologies you’ve used</h3><p>Make notes on why and how you used these technologies. It’s also a good idea to make notes on technologies you haven’t used before. The less in the dark you are the more prepared you’ll be should an unfamiliar question arise. </p><h3 id='3-research-the-company'>3. Research the company</h3><p>Find out everything you can about the company you’re going to interview with. The more you learn about the company the more you can understand what they are looking for. Having a sense of the general areas they are looking to improve will allow you to tailor your answers to their needs. It also shows interest if you can speak with confidence about the infrastructure details.</p><h3 id='4-talk-about-your-work'>4. Talk about your work</h3><p>The interview shouldn’t be the first time you talk about your work. Practice talking about your work with friends and colleagues. This’ll sharpen your points and make you more comfortable with the material. If you&#39;re job hunting, chances are you&#39;ll be going through a number of screenings. Use these calls to get in the habit of talking about what you do. Take note of what is most interesting to the caller, these will be helpful when preparing for the face-to-face interview.</p><h3 id='5-build-your-own-infrastructure'>5. Build your own infrastructure</h3><p>Building your own ‘dream’ infrastructure is a great way to showcase your work and gain confidence. You’ll learn how to solve more problems and adapt. </p><h3 id='6-solution-mindset'>6. Solution mindset</h3><p>Be aware, the interview won’t focus heavily on all the tools you know. Interviewers are well aware that a myriad of combinations exist, and instead want to see that you can approach problems with a solution mindset and see how you can learn and adapt to the specific needs of the company. </p><h3 id='7-dont-be-afraid-if-you-dont-know'>7. Don’t be afraid if you don’t know</h3><p>There are going to be tough questions asked - that’s a given. If you don’t know the answer that’s fine, admit as much, but don’t stop helplessly there. Instead, start brainstorming and work out a solution. Ask the interview questions about the issue to see if they give up some hints. Work through the question until you can figure out how to present a solution. It’s understandable to forget under pressure, but what will set you apart is that you don’t let that stop you from finding the answer. </p><p>That’s about it for now! Obviously this isn’t an extensive list of interview questions for DevOps engineers, and for more detailed, technical questions check out these suggestions on <a target='_blank' href='https://www.quora.com/What-are-some-good-interview-questions-for-a-DevOps-position'>Quora</a> and <a target='_blank' href='http://www.edureka.co/blog/interview-questions/top-devops-interview-questions-2016/'>Edureka</a>. </p><p>You might have a bit of a better understanding of DevOps, but if you need a bit more info about the concept, head on over to our post, <a target='_blank' href='https://blog.honeypot.io/what-is-devops/'>“What is DevOps?”</a>. </p><hr><p><strong><a target='_blank' href='https://www.honeypot.io/pages/for_employers?utm_source=blog&amp;utm_medium=organic&amp;utm_term=g&amp;utm_content=160904&amp;utm_campaign=hr-no'>Join Honeypot</a> today and connect with top, pre-screened developers. Make 1 hire per 10 invites sent.</strong></p>",
      "title": "Top DevOps Interview Questions & Answers to Know Before Interviewing",
      "subtitle": "What is your experience with continuous integration? How familiar are you with Chef, Puppet, Ansible and Salt? Check out these common examples of non-technical interview questions for devOps engineers and ace your next interview!",
      "date": "2016-09-12T02:24:17.000Z",
      "layout": "post",
      "author": "kate_nicolaisen",
      "categories": ["HR Tips"],
      "cover_image": "interview-questions-for-devops.png",
      "permalink": "5-interview-questions-for-devops/",
      "importance": 2,
      "cta": "recruiter",
      "excerpt": "<p>DevOps is a pretty new term, which makes hiring DevOps engineers a little challenging. The term &#x201C;DevOps&#x201D; first appeared in 2008, as part of a movement to bring greater collaboration between developers and IT professionals while improving software delivery. </p>"
    },
    {
      "id": "2016-09-01-what-is-devops",
      "contents": "<p>Type “what is DevOps” into Google and a staggering amount of results show. Considering DevOps is a relatively new term and job function in IT, there still seems to be some confusion among non-technical professionals as to what the role involves. This blog post gives a history of DevOps, provides a short comparison to System Admin, and finishes off with a glossary of DevOps terms.</p><h2 id='a-history-of-devops'>A History of DevOps</h2><p>The earliest mentions of DevOps date back to the 2008 Agile Conference and a talk on <a target='_blank' href='http://www.slideshare.net/littleidea/agile-infrastructure-agile-2009'>Agile Infrastructure by Andrew Clay Shafer and Patrick Debois</a>. At that time, businesses were experiencing problems with their tech infrastructure because the various departments weren’t effectively working together. Developers wrote code in isolation of the final product, which essentially meant that code often wasn’t compatible with the product environment. This caused a lot of problems in relation to deployment and bug fixes, which left System Administrators spread thin, and developers and product owners annoyed.</p><p><img src='/assets/images/what-is-devlops.png' alt='what-is-devlops.png'></p><p>Naturally this process was neither smooth nor efficient. The Agile movement first revolutionised the IT industry by increasing deployment frequency from one deployment every two to three weeks to 10 deployments per day. Since then, DevOps and Agile have kept pushing the boundaries of what is possible, and today companies like Amazon do several thousand deployments per day. In fact, Amazon are said to be doing one deployment every <a target='_blank' href='https://news.ycombinator.com/item?id=2971521'><strong>11.6 seconds!</strong></a>  </p><h2 id='what-is-a-devops-engineer'>What is a DevOps engineer?</h2><p>A DevOps Engineer is the person who knows the Software Development Lifecycle like the back of their own hand. They oversee code releases, and they were probably once a developer who became interested in network operations, or a system admin who wants to do more coding. Ultimately they turn ideas into reality.</p><h2 id='does-devops-replace-system-admin'>Does DevOps replace System Admin?</h2><p>There seems to be a common misconception that DevOps is merely System Admin repackaged, but with fancier tools. The stereotype goes: DevOps code, System Admins don&#39;t. In reality, it is fairer to say that there is a difference in focus between the two roles. System Admin is rather operative and maintenance, fixing things once they go wrong, while the focus of DevOps is automation through coding. </p><p>However, I must emphasise: System Admin shouldn&#39;t be replaced; the role is still very much needed. Errors will still occur, and System Admins are vital for daily operations and maintenance, and DevOps cannot and should not replace Ops people. Instead DevOps should be seen as the bridge to make the lives of developers and System Admins a lot easier. </p><h2 id='what-does-a-devops-engineer-do'>What does a DevOps engineer do?</h2><p>DevOps removes the incompatibility between development and product environments by creating code that automates and speeds up the tasks of System Admin. Previously System Admins had to complete lots of fixes, restructurings, deployments and small bits and pieces manually. </p><p>With DevOps, these things are automated and changes can be applied to all servers automatically rather than one-by-one manually. This means fewer tedious tasks and limitations for System Admin, allowing more time for server management and other maintenance tasks. For developers this means a better fit between the code they write and the actual product environment, therefore less rework and more time to focus on creating and developing. </p><p>At its best, DevOps improves workflow processes, infrastructure, and product performance through testing and fixing. Ultimately it’s faster time to market, improved response times, better scalability and a much nicer IT environment to work in. </p><h2 id='tools-that-devops-engineers-use'>Tools that Devops engineers use:</h2><p>So what tools do DevOps Engineers use? The absolute top buzzwords to look out for are Chef, Puppet, Salt and Ansible, which are all configuration tools. However, for a more detailed insight in keywords and tools, Honeypot has created the following glossary. Buckle up - it&#39;s gonna be a long ride!</p><h2 id='cloud'>Cloud</h2><h3 id='aws'>AWS</h3><p>“Amazon Web Services is a secure cloud service platform offering computer power, database storage, content delivery and other functionality to help businesses scale and grow.”</p><h3 id='azure'>Azure</h3><p>“Microsoft Azure is a growing collection of integrated cloud services, analytics, computing, database, mobile, networking, storage, and web for moving faster, achieving more, and saving money.”</p><h3 id='google-cloud-platform'>Google Cloud Platform</h3><p>“Google Cloud Platform lets you focus on what’s next for your business. Google Cloud Platform frees you from the overhead of managing infrastructure, provisioning servers and configuring networks. To let innovators innovate and let coders, well, just code.”</p><h3 id='heroku'>Heroku</h3><p>“Heroku is a cloud application platform - a new way of building and deploying web apps. Our service lets app developers spend their time on their application code, not managing servers, deployment, ongoing operations, or scaling.” </p><h3 id='openstack'>OpenStack</h3><p>“OpenStack is a set of software tools for building and managing cloud computing platforms for public and private clouds. OpenStack lets users deploy virtual machines and other instances that handle different tasks for managing a cloud environment on the fly.”</p><h3 id='rackspace'>Rackspace</h3><p>“Rackspace is the leader in managed hosting, with specialists in virtualization, security, containers, data, eCommerce, web content management, email and collaboration, disaster recovery and IT transformation.” </p><h2 id='configuration'>Configuration</h2><h3 id='ansible'>Ansible</h3><p>“Ansible is a radically simple IT automation engine that automates cloud provisioning, configuration management, application deployment, intra-service orchestration, and many other IT needs.” </p><h3 id='chef'>Chef</h3><p>“Whether you are managing five or five thousand servers, Chef is an open-source software agent that automates your infrastructure by turning it into code. That infrastructure becomes dynamic, versionable, human-readable, and testable. This frees you to easily and quickly provision, manage, and adapt your infrastructure in response to always changing needs - regardless if you are managing servers in the cloud, on-premises, or in a hybrid environment.”</p><h3 id='consul'>Consul</h3><p>“Consul has multiple components, but as a whole, it is a tool for discovering and configuring services in your infrastructure. It provides several key features: Service Discovery, Health Checking, Key/Value Store and Multi Datacenter. Consul is designed to be friendly to both the DevOps community and application developers, making it perfect for modern, elastic infrastructures.” </p><h3 id='puppet'>Puppet</h3><p>“Puppet provides a standard way of delivering and operating software, no matter where it runs. With the Puppet approach, you define what you want your apps and infrastructure to look like using a common easy-to-read language. From there you can share, test and enforce the changes you want to make across your datacenter. And at every step of the way, you have the visibility and reporting you need to make decisions and prove compliance. The result: you get a standard way of automating all of it, at scale.” </p><h3 id='salt'>Salt</h3><p>“Salt is a new approach to infrastructure management built on a dynamic communication bus. Salt can be used for data-driven orchestration, remote execution for any infrastructure, configuration management for any app stack, and much more.”</p><h3 id='terraform'>Terraform</h3><p>“Terraform is a tool for building, changing, and versioning infrastructure safely and efficiently. Terraform can manage existing and popular service providers as well as custom in-house solutions.” </p><h3 id='vagrant'>Vagrant</h3><p>“Vagrant provides easy to configure, reproducible, and portable work environments built on top of industry-standard technology and controlled by a single consistent workflow to help maximize the productivity and flexibility of you and your team.” </p><h2 id='containers'>Containers</h2><h3 id='docker'>Docker</h3><p>“Docker containers wrap a piece of software in a complete filesystem that contains everything needed to run: code, runtime, system tools, system libraries - anything that can be installed on a server. This guarantees that the software will always run the same, regardless of its environment.” </p><h2 id='continuous-integration'>Continuous Integration</h2><h3 id='bamboo'>Bamboo</h3><p>“Bamboo Server is the choice of professional teams for continuous integration, deployment, and delivery that software teams love to use.” </p><h3 id='circle-ci'>Circle CI</h3><p>“CircleCI provides enterprise-class support and services, with the flexibility of a startup. Using intelligent automation Circle CI helps engineering teams become more productive.”</p><h3 id='jenkins'>Jenkins</h3><p>“The leading open source automation server, Jenkins provides hundreds of plugins to support building, deploying and automating any project.” </p><h3 id='team-city'>Team City</h3><p>“Initially a Continuous Integration server, TeamCity has encompassed all the features you expect from a mature Continuous Deployment platform. Today it is the best choice you can make for both.” </p><h3 id='travis'>Travis</h3><p>“Test and deploy with confidence. Easily sync your GitHub projects with Travis CI and you’ll be testing your code in minutes!”</p><h2 id='deployment'>Deployment</h2><h3 id='capistrano'>Capistrano</h3><p>“Capistrano is a remote server automation tool. It supports the scripting and execution of arbitrary tasks and includes a set of sane-default deployment workflows. Capistrano can be used to: reliably deploy web applications to any number of machines simultaneously, in a sequence of as a rolling set.” </p><h3 id='kubernetes'>Kubernetes</h3><p>“Kubernetes is an open-source system for automating deployment, scaling, and management of containerized applications.”</p><h3 id='otto'>Otto</h3><p>“Otto was created to provide a high-level abstraction to both develop and deploy web application to any number of machines simultaneously, in sequence or as a rolling set.” </p><h2 id='scripting'>Scripting</h2><h3 id='ruby'>Ruby</h3><p>“A PROGRAMMER’S BEST FRIEND. A dynamic, open-source programming language with a focus on simplicity and productivity. It has an elegant syntax that is natural to read and easy to write.” </p><h3 id='python'>Python</h3><p>“Python’s simple, easy to learn syntax emphasizes readability and therefore reduces the cost of program maintenance.” </p><h3 id='bash'>Bash</h3><p>“Bash is the shell, or command language interpreter, for the GNU operating system. The name is an acronym for the ‘Bourne-Again SHell,’ a pun on Stephen Bourne, the author of the direct ancestor of the current Unix shell sh, which appeared in the Seventh Edition Bell Labs Research version of Unix.”</p><h3 id='perl'>Perl</h3><p>“Perl is the Swiss Army chainsaw of scripting languages: powerful and adaptable. It was first developed by Larry Wall, a linguist working as a systems administrator for NASA in the late 1980s, as a way to make report processing easier. Since then, it has moved into a large number of roles: automating system administration, acting as the glue between different computer systems; and, of course, being one of the most popular languages for CGI programming on the web.” </p><h2 id='the-day-to-day-life-of-a-devops-engineer'>The day-to-day life of a DevOps Engineer</h2><p>There is no typical looking day for a DevOps Engineer. Differences in the role may vary when dealing with company size, culture, and existing work processes. Depending on the company culture, there can be pushback from people not wanting to change, this is when a DevOps might find themselves doing things outside of their job description. </p><p>Although, in a company that is proactive, a typical day will have a DevOps professional spending their time coding, testing, deploying, and retesting with various DevOps tools. Bugs will need fixing and time will be spent implementing processes in the teams to streamline development. On the social side of things, a DevOps engineer will have to ensure a culture of collaboration is maintained so that teams are working towards persistent improvement. </p><p>TL;DR - it’s a very important job.</p><h2 id='the-requirements-to-get-a-devops-job'>The requirements to get a DevOps job</h2><h3 id='educational-requirements'>Educational requirements</h3><ul><li>Bachelor’s degree (Most candidates have)</li><li>Certified DevOps Engineer certification through AWS (Fewer candidates have)</li><li>DevOps Agile Skills Association (DASA) (Fewer candidates have)</li></ul><h3 id='proficiency-in-chef-puppet-ansible-and-salt'>Proficiency in Chef, Puppet, Ansible and Salt</h3><p>These are all tools enabling the scalability of server configuration and management through automation, which allows the orchestration of hundreds - even thousands of servers</p><h3 id='excellent-software-development-skills'>Excellent software development skills</h3><p>Everything you do as a DevOps engineer will rely heavily on the core skills of Linux, Python, and AWS (or alternate software) - proficiency in these is a must. Bear in mind, AWS has over a hundred services, knowing all these in and out is impossible, a DevOps engineer focuses primarily on the most common services and what’s essential for the product. Experience with Java, Python, and Groovy will also be necessary when it comes to design and implementation.Other relevant skills</p><p>Other relevant technical skills may include the following: Microsoft Server; Linux; Apache; Bash; and IP networking.</p><h2 id='what-is-a-typical-devops-engineer-salary'>What is a typical DevOps engineer salary?</h2><p>A DevOps engineer salary can vary greatly by years of experience and location. Here are the average DevOps salaries in some European countries. </p><ul><li>The Netherlands: €59,275 ( €35k - 76k). Source: <a target='_blank' href='https://www.glassdoor.de/Geh%C3%A4lter/netherlands-devops-engineer-gehalt-SRCH_IL.0,11_IN178_KO12,27.htm?countryRedirect=true'>Glassdoor</a>.</li><li>Germany: €60,000 (€ 45k - 78k). Source: <a target='_blank' href='https://www.linkedin.com/salary/devops-engineer-salaries-in-germany'>LinkedIn</a>.</li><li>Austria: €63,385 (€ 44k -78k). Source: <a target='_blank' href='https://www.erieri.com/salary/job/devops-engineer/austria'>Economic Research Institute</a>.</li><li>Spain: €40,000 (€ 24k - 50k). Source: <a target='_blank' href='https://www.linkedin.com/salary/devops-engineer-salaries-in-madrid-area-spain'>LinkedIn</a>.</li><li>France: € 43,179 (€ 35k - 60k). Source: <a target='_blank' href='https://www.glassdoor.de/Geh%C3%A4lter/france-devops-gehalt-SRCH_IL.0,6_IN86_KO7,13.htm?countryRedirect=true'>Glassdoor</a>.</li></ul><h2 id='how-to-find-the-right-devops-engineer-job-for-you'>How to find the right DevOps engineer job for you</h2><p>Given that you have the skills for a DevOps role, it won’t be hard to find a job; the position is currently in demand and projected to become even more so. When you do start looking for a role consider the following:</p><h3 id='where-do-you-want-to-work'>Where do you want to work?</h3><p>The location will be one of your biggest considerations. Where you work will affect salary, work/life balance, your standard of living, family, schooling, and the list goes on. Take pains to research the ins and outs of each city to find something that suits your needs.</p><h3 id='preferred-languages-and-tech-stacks'>Preferred languages and tech stacks?</h3><p>Where is it that you really shine? It’s often best to play to your strengths in this case. Learning new tools on the job can be a challenge, the same as working on projects which require expertise you are lacking.</p><h3 id='set-salary-expectations'>Set salary expectations</h3><p>If you plan to move internationally, the salary range will probably vary, don’t be surprised if you get an offer lower than expected. And in the negotiation phase, you probably don’t want to be asking for too much . If you would like to know more about salary negotiation check out The Basics of Salary Negotiation by Ryan Latta. </p><h3 id='apply-to-companies-that-work-for-your-needs'>Apply to companies that work for your needs.</h3><p>Finding a company that fits all your requirements (or most) is the last step. You might prefer the flexibility of a start-up or the challenge of an enterprise both come with their own set of problems and benefits. When applying, think about the company culture and if it would be a good fit for you. </p><p>I hope this helps you on your journey to become a DevOps Engineer in 2020 and gives you a heads up on what to expect working in the role. For more information on interviewing as a DevOps engineer, check out this article: <a target='_blank' href='https://blog.honeypot.io/5-interview-questions-for-devops/'>5 Interview Questions for a DevOps engineer</a>.</p><hr><p><strong><a target='_blank' href='https://www.honeypot.io/pages/for_employers?utm_source=blog&amp;utm_medium=organic&amp;utm_term=g&amp;utm_content=160903&amp;utm_campaign=hr-no'>Join Honeypot</a> today and connect with top, pre-screened developers. Make 1 hire per 10 invites sent.</strong></p>",
      "title": "How to become a DevOps Engineer: The Skills & Requirements Needed in 2020",
      "subtitle": "What is DevOps and what does a DevOps engineer do? What tools do they use? Does DevOps replace System Admin? Learn all about the history and purpose of DevOps in our guide below.",
      "date": "2016-09-09T02:52:34.000Z",
      "layout": "post",
      "author": "kate_nicolaisen",
      "categories": ["HR Tips"],
      "cover_image": "what-is-devops-cover.png",
      "permalink": "what-is-devops/",
      "importance": 2,
      "cta": "recruiter",
      "excerpt": "<p>Type &#x201C;what is DevOps&#x201D; into Google and a staggering amount of results show. Considering DevOps is a relatively new term and job function in IT, there still seems to be some confusion among non-technical professionals as to what the role involves. This blog post gives a history of DevOps, provides a short comparison to System Admin, and finishes off with a glossary of DevOps terms.</p>"
    },
    {
      "id": "2016-09-01-whats-it-like-to-work-at-tomtom",
      "contents": "<p>Cees van Dok is Head of UX Design at TomTom, a global leader in navigation and mapping products. Cees is passionate about the possibilities of design and UI. He talks to Honeypot about trends in UI design, his role in TomTom’s navigation UI redesign and the many options available for developers in Amsterdam. </p><p><img src='/assets/images/tomtom-box.png' alt='tomtom'></p><h3 id='tomtom-is-a-rare-example-of-a-consumer-brand-that-has-emerged-from-europe-in-the-2000s-what-are-the-ingredients-for-its-success'>TomTom is a rare example of a consumer brand that has emerged from Europe in the 2000s. What are the ingredients for its success?</h3><p>The root of TomTom’s success lies with the four founders who started the company 25 years ago. In fact, TomTom is an excellent illustration of how long it takes to become successful as a startup! They are still highly committed to the company. </p><p>The product which made us famous about a decade ago is off-the market navigation; that brought map technology, navigation software and hardware thinking together in a single box, which was a very clever play. It required a lot of different skills and it&#39;s the biggest achievement TomTom made. </p><p>Combining the technology with a strong sales and marketing attitude, a good knowledge of the European customer and an association with the European automotive industry and you have the ingredients for TomTom’s success. </p><h3 id='what-impact-has-tomtoms-success-had-on-startups-in-the-netherlands'>What impact has TomTom’s success had on startups in the Netherlands?</h3><p>I think it&#39;s important that companies like TomTom and Phillips, exist in Amsterdam. It provides a good example to Dutch startups of how they could eventually grow. I think it&#39;s very motivating.</p><h3 id='the-netherlands-is-traditionally-strong-in-technology-what-is-it-like-for-developers-working-in-amsterdam'>The Netherlands is traditionally strong in technology. What is it like for developers working in Amsterdam?</h3><p>There are many options for developers in Amsterdam.  For developers who feel they need to make a career switch to touch more customers with their skills, it&#39;s also great to have a company like TomTom around. If you have the ambition to impact millions of people&#39;s lives, then it’s a good alternative to startups. </p><p>For companies, It&#39;s a tough landscape out there to attract and retain web developers and definitely for more specific technologies there is a real scarcity. Getting skilled, affordable talent is hard. </p><h3 id='how-many-software-developers-and-designers-work-at-tomtom'>How many software developers and designers work at TomTom?</h3><p>The design team at TomTom is about 40 people, including product designers, interaction designers, visual designers, user researchers and copywriters. They are largely focused on our consumer product line. Across the company, our engineering group has about 1000 engineers.  Those engineers are software, hardware and test engineers. </p><h3 id='that-is-a-small-group-of-designers-in-comparison-to-engineers-how-do-the-teams-interact'>That is a small group of designers in comparison to engineers. How do the teams interact?</h3><p>The majority  of TomTom software engineers work on low-level platform technology which does not have end user integration or involvement. Our map making requires a lot of engineering, especially around how you take the input from mobile mapping vans into map production. There is a lot of tool development and core technology development that doesn&#39;t require too much – if any - design focus. </p><p>Most of our designers work on frontend. Device UI, web sites and apps are covered by a subset of the engineering team and that&#39;s who the designers work closest with. As soon as there is a visible component or as soon as something is communicating with an end customer - UI on watches, apps, end-devices, companion apps - design enters. </p><h3 id='how-did-the-emergence-of-smartphones-impact-tomtom'>How did the emergence of smartphones impact TomTom?</h3><p>TomTom saw huge growth from 2005 to 2007, but then free maps and free navigation emerged. Maps basically became a free commodity. It was seen as a big threat but if you look at it in hindsight, it&#39;s not either or. Today you see people using  navigation on their phone, as built-in or as an after-market device. All of those three products have a lot of relevance.</p><h3 id='tomtom-is-contributing-hugely-to-the-development-of-autonomous-driving-what-are-the-technologies-behind-autonomous-driving'>TomTom is contributing hugely to the development of autonomous driving. What are the technologies behind autonomous driving?</h3><p>In the automotive space, we are a technology provider. The foundation of automated driving is very precise road condition information and maps are the core asset.  We are making true HD maps, with all the lane info, which helps an automated vehicle very precisely position itself on the road network and understand the situation ahead. Our technology brings the surroundings of the road into a 3D model. The mapping vans drive around, create a point cloud of the environment and we distill that point cloud into what we call HD maps and Road DNA. This allows the car to know and understand its surroundings precisely - information like the height of a bridge or the distance to a building.</p><p>On top of the HD map and the Road DNA, we build our navigation software, which functions in real time. We build navigation software which helps automated vehicles understand where they are, how they are positioned and where they should go and how they relate to other objects. That&#39;s a core foundation of the industry’s attempt to create automated driving. </p><p>Along with Google and HERE, we are one of three players in this field and that&#39;s incredibly exciting. HERE is now owned by a German consortium of car manufacturers, which opens doors for us with non-German carmakers.</p><h3 id='you-led-the-redesign-of-tomtoms-navigation-ui-this-must-have-been-a-huge-challenge-what-was-your-process'>You led the redesign of TomTom’s navigation UI. This must have been a huge challenge. What was your process?</h3><p>The redesign opportunity was one of the reasons why I joined TomTom.  From a UI point of view, the product had gone stale a bit. Four or five years ago, our product was very similar to other products in the market, we didn&#39;t have a unique identity or brand. At the same time, we also had a UI made for the navigation boxes. We needed to be able to transfer our UI to any product - to phones, to navigation devices, to cars and to all these frontends which have very different capabilities. </p><p>The challenge we faced was to define a user interface which could automatically morph itself to all those different frontends. What you see with responsive design on web today is what we did four or five years ago. We realized we could only move forward when our technology was unified - different products for different markets but all based on a similar flexible core.  We wanted to create a UI which was visually more honourable, less cluttered and more recognizable as as TomTom. </p><p>A group of four or five designers and me designed the base principles and did a lot of concept development, little prototypes, and designs on paper. We worked with a dedicated group of developers to test our ideas and see what worked and what did not. That then developed into a much bigger project which became the 4th generation of our navigation products. That is still the foundation of the products we ship today. </p><h3 id='what-is-the-core-of-tomtoms-navigation-ui'>What is the core of TomTom’s navigation UI?</h3><p>In the last four years, we added a lot of new features but the base is still the same - a UI that you don&#39;t have to touch while driving. A driving experience changes with context. If you are on the highway you can see far ahead, if you are in the city you get a closer view, if there is traffic you are informed, the whole UI is meant as TV watching, you should not have to take your hands off the steering wheel to get the info you need. </p><h3 id='what-do-you-see-as-the-biggest-trends-in-ui-currently'>What do you see as the biggest trends in UI currently?</h3><p>Designers are becoming much more technologically-aware. Customers get accustomed to new tech very quickly. For example in the early days of touchscreen technology, every mechanism had to be advertised. If you wanted to swipe up you needed a little up arrow to indicate what&#39;s possible. But if people pick up a device today they know how to use it.  Their behaviours have changed because of knowledge of interactions and expectations. Your customer will try anything with your product and you must be aware of that.</p><p>A designer today must be very knowledgeable of capabilities and limitations of the technologies the developer is working with. I think traditionally we’ve seen designers and developers live in their own worlds and now you see they are merging. Designers are learning basic coding and more advanced prototyping and live as much in JavaScript as in Photoshop. That&#39;s crucial to become and stay effective.</p><p>In our discipline, it&#39;s not just about the screen, we have to deal with a very constrained time factor. If you are running you can only look at your watch screen for two tenths of a second, so the information needs to be spot on. I think same in the car. It&#39;s a highly constrained context and that requires a certain mindset and skill. </p><hr><p><strong><a target='_blank' href='https://app.honeypot.io/users/sign_up?utm_source=blog&amp;utm_medium=organic&amp;utm_term=e&amp;utm_content=160901&amp;utm_campaign=dev-no'>Join Honeypot</a> today and receive 4 interview invites or more in three weeks.</strong></p>",
      "title": "What's it like to work at TomTom?",
      "subtitle": "Interested in the prospect of joining TomTom? We interviewed Cees van Dok, Head of UX Design at TomTom, to discuss trends in UI design, his role in TomTom’s navigation UI redesign and the many options available for developers in Amsterdam.",
      "date": "2016-09-01T09:58:37.000Z",
      "layout": "post",
      "author": "emma_tracey",
      "categories": ["Interviews"],
      "featured": true,
      "featured_weight": 2,
      "cover_image": "cees.jpg",
      "permalink": "whats-it-like-to-work-at-tomtom/",
      "importance": 2,
      "excerpt": "<p>Cees van Dok is Head of UX Design at TomTom, a global leader in navigation and mapping products. Cees is passionate about the possibilities of design and UI. He talks to Honeypot about trends in UI design, his role in TomTom&#x2019;s navigation UI redesign and the many options available for developers in Amsterdam. </p>"
    }
  ]
}
